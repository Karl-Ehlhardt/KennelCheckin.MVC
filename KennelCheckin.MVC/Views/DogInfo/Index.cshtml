@model Kennel.Models.Data.Joining_Data.DogInfo.DisplayOnly.DogInfoIndexView

@{
    ViewBag.Title = "Index";
}

<div class="jumbotron bg-kennelYellow">
    <h1>Control Center</h1>
    <p>@Html.ActionLink("View Your Profile", "Details", "Owner", new { id = Model.Owner.OwnerId }, new { @class = "btn btn-danger" })</p>
</div>

<table class="table table-striped">
    <h1>
        Your Dogs
    </h1>
    @Html.ActionLink("Create New Dog", "Create", "DogBasic", null, new { @class = "btn btn-danger" })
    <thead>
        <tr>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.DogBasic.Count(); i++)
        {
            <tr class="info-row-dog bg-kennelYellow">
                <td class="col-md-9">
                    <p>@Html.DisplayFor(model => model.DogBasic.ElementAt(i).DogName)</p>
                </td>
                <td class="col-md-3">
                    @Html.ActionLink("Details", "Details", new { id = Model.DogInfo.ElementAt(i).DogInfoId }, new { @class = "btn btn-danger" })
                    @Html.ActionLink("Delete", "Delete", new { id = Model.DogInfo.ElementAt(i).DogInfoId }, new { @class = "btn btn-danger" })
                    @Html.ActionLink("Add Visit", "Create", "DogVisit", new { id = Model.DogInfo.ElementAt(i).DogInfoId }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

<table class="table table-striped">
    <h1>
        Upcoming Kennel Stays
    </h1>
    <thead>
        <tr>
            <th scope="col">Dog Name</th>
            <th scope="col">Dropoff Date</th>
            <th scope="col">Pickup Date</th>
            <th scope="col">Notes</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.DogFutureVisit.Count(); i++)
        {
            <tr class="info-row-dog bg-kennelYellow">
                <td class="col-md-2">
                    <p>@Html.DisplayFor(model => model.DogFutureVisit.ElementAt(i).DogName)</p>
                </td>
                <td class="col-md-2">
                    <p>@Html.DisplayFor(model => model.DogFutureVisit.ElementAt(i).DropOffTime)</p>
                </td>
                <td class="col-md-2">
                    <p>@Html.DisplayFor(model => model.DogFutureVisit.ElementAt(i).PickUpTime)</p>
                </td>
                <td class="col-md-3">
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-danger bg-kennelGreen" data-toggle="modal" data-target="#@Model.DogFutureVisit.ElementAt(i).DogVisitId">
                        Notes
                    </button>

                    <!-- Modal -->
                    <div class="modal fade" id="@Model.DogFutureVisit.ElementAt(i).DogVisitId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Notes</h5>
                                </div>
                                <div class="modal-body">
                                    @Html.DisplayFor(model => model.DogFutureVisit.ElementAt(i).Notes)
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger bg-kennelGreen" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="col-md-3">
                    @Html.ActionLink("Edit", "Edit", "DogVisit", new { id = Model.DogFutureVisit.ElementAt(i).DogVisitId }, new { @class = "btn btn-danger" })
                    @Html.ActionLink("Delete", "Delete", "DogVisit", new { id = Model.DogFutureVisit.ElementAt(i).DogVisitId }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>


<table class="table table-striped">
    <h1>
        Current Dogs at Kennel
    </h1>
    <thead>
        <tr>
            <th scope="col">Dog Name</th>
            <th scope="col">Dropoff Date</th>
            <th scope="col">Pickup Date</th>
            <th scope="col">Notes</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.DogOngoingVisit.Count(); i++)
        {
            <tr class="info-row-dog bg-kennelYellow">
                <td class="col-md-2">
                    <p>@Html.DisplayFor(model => model.DogOngoingVisit.ElementAt(i).DogName)</p>
                </td>
                <td class="col-md-2">
                    <p>@Html.DisplayFor(model => model.DogOngoingVisit.ElementAt(i).DropOffTime)</p>
                </td>
                <td class="col-md-2">
                    <p>@Html.DisplayFor(model => model.DogOngoingVisit.ElementAt(i).PickUpTime)</p>
                </td>
                <td class="col-md-3">
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-danger bg-kennelGreen" data-toggle="modal" data-target="#@Model.DogOngoingVisit.ElementAt(i).DogVisitId">
                        Notes
                    </button>

                    <!-- Modal -->
                    <div class="modal fade" id="@Model.DogOngoingVisit.ElementAt(i).DogVisitId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Notes</h5>
                                </div>
                                <div class="modal-body">
                                    @Html.DisplayFor(model => model.DogOngoingVisit.ElementAt(i).Notes)
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger bg-kennelGreen" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="col-md-3">
                    @Html.ActionLink("Change Pickup", "ChangePickup", "DogVisit", new { id = Model.DogOngoingVisit.ElementAt(i).DogVisitId }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>
